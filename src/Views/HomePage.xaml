<Page
    x:Class="DayDayUp.Views.HomePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:converter="using:DayDayUp.UI.Converters"
      xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
      xmlns:models="using:DayDayUp.Models"
      xmlns:views="using:DayDayUp.Views"
      mc:Ignorable="d"
      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    
    <Page.Resources>
        <converter:EnumToVisibilityConverter x:Key="TaskStatusConverter" />
        <converter:EnumToVisibilityNegativeConverter x:Key="NegativeTaskStatusConverter" />
        <converter:CountToVisibilityConverter x:Key="CountConverter" />
        <converter:CountToVisibilityNegativeConverter x:Key="NegativeCountConverter" />
        <converter:DurationToStringConverter x:Key="DurationToStringConverter" />
        <converter:StatusToStringConverter x:Key="StatusToStringConverter" />
        <converter:DateToStringConverter x:Key="DateToStringConverter" />
        <converter:ProgressToStringConverter x:Key="ProgressToStringConverter" />
        
        <MenuFlyout x:Name="TodoItemFlyout">
            <MenuFlyout.Items>
                <MenuFlyoutItem Text="{x:Bind ViewModel.Strings.Delete}"
                                Click="DeleteTaskFlyoutButton_Click"
                                Icon="Delete" />
            </MenuFlyout.Items>
        </MenuFlyout>
        <Style x:Key="DoingTodoItemContainerStyle"
               BasedOn="{StaticResource ListViewItemContainerStyle}"
               TargetType="ListViewItem">
            <Setter Property="Margin"
                    Value="0,0,0,4" />
            <Setter Property="ContextFlyout"
                    Value="{StaticResource TodoItemFlyout}" />
        </Style>
    </Page.Resources>
    <Grid Padding="{StaticResource PagePadding}"
          CornerRadius="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Margin="0,0,0,12">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBox x:Name="newTaskTextBox"
                     Grid.Column="0"
                     PlaceholderText="{x:Bind ViewModel.Strings.AddNewTodo}"
                     VerticalAlignment="Center"
                     HorizontalAlignment="Stretch"
                     KeyUp="newTaskTextBoxKeyUp" />
            <muxc:DropDownButton x:Name="TaskDurationSelectionButton"
                                 Grid.Column="1"
                                 HorizontalAlignment="Center"
                                 Margin="{StaticResource ContentMargin}"
                                 ToolTipService.ToolTip="{x:Bind ViewModel.Strings.EstimatedDurationToolTip}">
                <muxc:DropDownButton.Content>
                    <FontIcon FontFamily="Segoe Fluent Icons"
                              Glyph="&#xe823;" />
                </muxc:DropDownButton.Content>
                <muxc:DropDownButton.Flyout>
                    <MenuFlyout Placement="Bottom">
                        <MenuFlyoutItem Text="{x:Bind ViewModel.Strings.DropDownNone}"
                                        Click="AlignmentMenuFlyoutItem5_Click" />
                        <MenuFlyoutItem Text="{x:Bind ViewModel.Strings.DropDown30Mins}"
                                        Click="AlignmentMenuFlyoutItem0_Click" />
                        <MenuFlyoutItem Text="{x:Bind ViewModel.Strings.DropDown1Hour}"
                                        Click="AlignmentMenuFlyoutItem1_Click" />
                        <MenuFlyoutItem Text="{x:Bind ViewModel.Strings.DropDown6Hours}"
                                        Click="AlignmentMenuFlyoutItem2_Click" />
                        <MenuFlyoutItem Text="{x:Bind ViewModel.Strings.DropDown12Hours}"
                                        Click="AlignmentMenuFlyoutItem3_Click" />
                        <MenuFlyoutItem Text="{x:Bind ViewModel.Strings.DropDown1Day}"
                                        Click="AlignmentMenuFlyoutItem4_Click" />
                    </MenuFlyout>
                </muxc:DropDownButton.Flyout>
            </muxc:DropDownButton>
        </Grid>
        <SplitView  Grid.Row="1"
                    x:Name="HomeSplitView"
                    IsPaneOpen="False"
                    OpenPaneLength="300"
                    CompactPaneLength="48"
                    DisplayMode="Inline"
                    PanePlacement="Right"
                    PaneBackground="Transparent">
            <Grid>
                <ListView Name="TaskList"
                          ItemsSource="{x:Bind ViewModel.Todos}"
                          SelectedItem="{x:Bind ViewModel.SelectedTodo, Mode=TwoWay}"
                          Visibility="{x:Bind ViewModel.Todos.Count,Converter={StaticResource CountConverter}, Mode=OneWay}"
                          Loaded="TaskList_Loaded"
                          RightTapped="ListView_RightTapped"
                          Tapped="TaskList_ItemClick"
                          ItemContainerStyle="{StaticResource DoingTodoItemContainerStyle}">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="models:Todo">
                            <Grid x:Name="itemRoot"
                                  Padding="8"
                                  Height="56"
                                  Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                                  BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                                  BorderThickness="1"
                                  CornerRadius="{StaticResource ControlCornerRadius}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="LayoutVisualStates">
                                        <VisualState x:Name="WideLayout">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="{StaticResource Breakpoint640Plus}" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters />
                                        </VisualState>
                                        <VisualState x:Name="NarrowLayout">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="0" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="itemRoot.Width"
                                                        Value="Auto" />
                                                <Setter Target="itemRoot.Height"
                                                        Value="48" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="48" />
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Column="0"
                                          IsChecked="{x:Bind IsFinished}"
                                          Click="CheckBox_Click"
                                          VerticalAlignment="Center" />
                                <StackPanel Grid.Column="1"
                                            Orientation="Vertical"
                                            VerticalAlignment="Center"
                                            Spacing="4">
                                    <TextBlock x:Name="taskNameTextBlock"
                                               HorizontalAlignment="Left"
                                               Text="{x:Bind Name, Mode=OneWay}"
                                               Style="{ThemeResource BasicTextStyle}" />
                                    <StackPanel Orientation="Horizontal"
                                                Spacing="4"
                                                Margin="{StaticResource ContentMargin}"
                                                Visibility="{x:Bind ExpectedDurationMins, Converter={StaticResource CountConverter},Mode=OneWay}">
                                        <TextBlock x:Name="EstimatedDuration"
                                                   x:Uid="HomePageProgress"
                                                   Style="{ThemeResource SmallTextStyle}" />
                                        <TextBlock Text="{x:Bind Progress, Mode=OneWay, Converter={StaticResource ProgressToStringConverter}}"
                                                   Style="{ThemeResource SmallTextStyle}" />
                                    </StackPanel>
                                </StackPanel>
                                <Button x:Name="StartButton"
                                        Grid.Column="2"
                                        Style="{StaticResource TransparentButton}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Click="StartButton_Click"
                                        Visibility="{x:Bind ExpectedDurationMins, Converter={StaticResource CountConverter}, Mode=OneWay}">
                                    <StackPanel VerticalAlignment="Center"
                                                HorizontalAlignment="Center">
                                        <FontIcon Name="StartIcon"
                                                  FontSize="16"
                                                  FontFamily="Segoe Fluent Icons"
                                                  Glyph="&#xe768;"
                                                  Visibility="{x:Bind Status,  Mode=OneWay,Converter={StaticResource NegativeTaskStatusConverter}}" />
                                        <FontIcon Name="PauseIcon"
                                                  FontSize="16"
                                                  FontFamily="Segoe Fluent Icons"
                                                  Glyph="&#xe769;"
                                                  Visibility="{x:Bind Status,  Mode=OneWay,Converter={StaticResource TaskStatusConverter}}" />
                                    </StackPanel>
                                </Button>
                                <muxc:ProgressRing Grid.Column="2"
                                                   Width="32"
                                                   Height="32"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Value="{x:Bind Progress}"
                                                   Visibility="{x:Bind Status, Mode=OneWay,Converter={StaticResource TaskStatusConverter}}"
                                                   Maximum="100"
                                                   IsIndeterminate="False" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <TextBlock Name="DefaultText"
                           Visibility="{x:Bind ViewModel.Todos.Count, Converter={StaticResource NegativeCountConverter}, Mode=OneWay}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{x:Bind ViewModel.Strings.EmptyList}" />
            </Grid>
            <SplitView.Pane>
                <ScrollViewer Padding="12"
                              Margin="8,0,0,0"
                              Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                              CornerRadius="4">
                    <StackPanel Spacing="4">
                        <TextBox x:Name="DetailPanelTaskName"
                                 PlaceholderText="{x:Bind ViewModel.SelectedTodo.Name}"
                                 TextWrapping="Wrap"
                                 Text="{x:Bind ViewModel.SelectedTodo.Name, Mode=OneWay}"
                                 KeyUp="DetailPanelTaskName_KeyUp"
                                 FontSize="16" />
                        <Button HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Left"
                                Click="StatusButton_Click"
                                Height="44"
                                VerticalContentAlignment="Center"
                                Visibility="{x:Bind ViewModel.SelectedTodo.ExpectedDurationMins, Converter={StaticResource CountConverter}, Mode=OneWay}">
                            <Button.Content>
                                <TextBlock TextWrapping="Wrap">
                                    <Run Text="{x:Bind ViewModel.Strings.Status}" />
                                    <Run Text="{x:Bind ViewModel.SelectedTodo.Status, Mode=OneWay, Converter={StaticResource StatusToStringConverter}}"
                                         FontWeight="Bold" /></TextBlock>
                            </Button.Content>
                        </Button>
                        <Button HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Left"
                                Click="ExpectedDurationMinsButton_Click"
                                Height="44"
                                VerticalContentAlignment="Center">
                            <Button.Content>
                                <TextBlock>
                                    <Run Text="{x:Bind ViewModel.Strings.EstimatedDuration}" />
                                    <Run Text="{x:Bind ViewModel.SelectedTodo.ExpectedDurationMins, Mode=OneWay, Converter={StaticResource DurationToStringConverter}}"
                                         FontWeight="Bold" /></TextBlock>
                            </Button.Content>
                        </Button>
                        <Button HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Left"
                                Height="44"
                                VerticalContentAlignment="Center"
                                Visibility="{x:Bind ViewModel.SelectedTodo.ExpectedDurationMins, Converter={StaticResource CountConverter}, Mode=OneWay}"
                                Click="PredictionButton_Click">
                            <Button.Content>
                                <TextBlock TextWrapping="Wrap"
                                           FontWeight="Bold">
                                    <Run  Text="{x:Bind ViewModel.Strings.PredictionDuration}" /></TextBlock>
                            </Button.Content>
                        </Button>
                        <muxc:Expander HorizontalAlignment="Stretch"
                                       HorizontalContentAlignment="Left"
                                       ExpandDirection="Down"
                                       IsExpanded="False"
                                       Visibility="{x:Bind ViewModel.SelectedTodo.ExpectedDurationMins, Converter={StaticResource CountConverter}, Mode=OneWay}">
                            <muxc:Expander.Header>
                                <TextBlock TextWrapping="Wrap">
                                    <Run Text="{x:Bind ViewModel.Strings.Duration}" />
                                    <Run Text="{x:Bind ViewModel.SelectedTodo.DurationMins, Mode=OneWay,Converter={StaticResource DurationToStringConverter}}"
                                         FontWeight="Bold" /></TextBlock>
                            </muxc:Expander.Header>
                            <muxc:Expander.Content>
                                <views:TodoTimeStamp x:Name="TodoTimeStamp_Expander"
                                                     TimeStamps="{x:Bind ViewModel.SelectedTodo.TimeStamps,Mode=OneWay}" />
                            </muxc:Expander.Content>
                        </muxc:Expander>
                        <TextBlock Style="{ThemeResource SmallTextStyle}"
                                   HorizontalAlignment="Center">
                               <Run Text="{x:Bind ViewModel.Strings.CreatedIn}" />
                               <Run Text="{x:Bind ViewModel.SelectedTodo.CreationDate, Mode=OneWay, Converter={StaticResource DateToStringConverter}}" /></TextBlock>
                    </StackPanel>
                </ScrollViewer>
            </SplitView.Pane>
        </SplitView>
    </Grid>
</Page>
